// Test HLLC: showcase formal form transformations

contract Test18 {
    uint x;
    address a;

    function f1(uint y) {
        a.transfer(y:T);
        if (balance(T)<7) {
            x = 1;
        }
        else {
            x = 2;
        }
    }

    function f2(uint y) {
        x=y-5;
        if (x<3) {
            a.transfer(x:T);
        }
        else {
            x = 2;
        }
    }

    function f3(uint y) {
        if (x<3) {
            x = 1;
        }
        else {
            x = 2;
        }
        x=x+1;
    }

    function f4() {
        if (x<=9) {
            // x = x+1;
            if (x>5) {
                x=1;
            }
            else {
                x=2;
            }
        }
        else {
            x=3;
        }
    } 

    function f5(uint y) {
        x=x+y;
        require x<5;
    }

    function f6(uint y) {
        a.transfer(x:T);
        require (balance(T)>5);
    }

    function f7() {
        if (x<20) {
            x = x+5;
            require x<23;
        }
        else {
            x = 15;
        }
    }

    function f8() {
        if (x<20) {
            x = 1000;
        }
        else if (x<10) {
            x = 15;
        }
        require (x<500);
    }
}
