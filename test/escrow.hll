/**************************************************************************************************** 
    The Escrow contract regulates a payment between a buyer and a seller. 
    The contract is split in the following phases:
    - in the join phase, the buyer and the seller join the contract. 
      The buyer must provide a deposit in T;
    - in the choice phase, the users try to find an agreement about the recipient of the deposit;
    - in the redeem phase, if the users have found an agreement, then the chosen recipient 
      can redeem the deposit;
    - after the redeem phase has passed, an escrow oracle is used to resolve the dispute. 
      Upon the payment of a fee, the oracle chooses the recipient, who can then redeem the remaining 
      part of the deposit.
 ****************************************************************************************************/

contract Escrow {
    uint end_join;          // deadline of the join phase
    uint end_choice;        // deadline of the choice phase
    uint feeRate;           // percentage of the deposit paid to the escrow
    address buyer; 
    address seller;
    address escrow;

    constructor(address e, uint t1, uint t2, uint f) {
        require (t1 < t2);
        end_join = t1;
        end_choice = t2;
        escrow = e;
        feeRate = f;
    } next(join_buyer)

    function join_buyer(address a, address b) input(x:T) { 
        require a!=b;  // no schizophrenia
        buyer = a;
        seller = b;
    } next(join_seller,redeem_on_timeout)

    function join_seller() auth(seller) { 
    } next(redeem_on_choice,arbitrate)

    function redeem_on_choice(address rcv) auth(buyer) auth(seller) {
        require(rcv==buyer || rcv==seller);
        rcv.transfer(balance(T):T);
    } next(end)

    function redeem_on_timeout() after(end_join) { 
        buyer.transfer(balance(T):T);
    } next(end)

    function fee(uint deposit) view { // computes the escrow fee
        (deposit * feeRate) / 100
    }

    function arbitrate(address rcv) auth(escrow) after(end_choice) {
        escrow.transfer(fee(balance(T)):T);
        rcv.transfer(balance(T):T);    
    } next(end)

    function end() { } next(end) // sink state, terminates the contract
}